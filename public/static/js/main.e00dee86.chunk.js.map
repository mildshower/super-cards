{"version":3,"sources":["HostButton.js","JoinBox.js","Home.js","useQuery.js","GameAPI.js","HostPage.js","JoinPage.js","LastFightDetails.js","Status.js","Card.js","PlayerDetail.js","Game.js","Icon.js","App.js","serviceWorker.js","index.js"],"names":["HostButton","pName","to","className","JoinBox","useState","gameId","setGameId","value","onChange","e","target","Home","input","setInput","placeholder","useQuery","URLSearchParams","useLocation","search","fetch","then","r","json","trait","HostPage","gameDetails","setGameDetails","isGameStarted","setIsGameStarted","get","useEffect","GameAPI","intervalId","setInterval","isStarted","clearInterval","useHostingDetails","message","JoinPage","joinStatus","setJoinStatus","useParams","useJoinStatus","error","LastFightDetails","winnerCard","winner","looserCard","hasWon","Fragment","src","img","name","toUpperCase","Status","lastFight","isOwnTurn","Card","id","intelligence","strength","speed","durability","power","combat","height","weight","onFight","isPlayable","handleClick","key","alt","onClick","NoCard","PlayerDetail","topCard","currDeck","comingDeck","isMe","isTurn","Game","gameStatus","setGameStatus","ref","useRef","current","useGameStatus","fight","state","isWinner","myself","opponent","Icon","App","path","from","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.e00dee86.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst HostButton = ({ pName }) => {\n  return (\n    <Link to={`/host?pName=${pName}`} className=\"actionButton\">\n      <span>Host</span>\n    </Link>\n  );\n};\n\nexport default HostButton;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst JoinBox = ({ pName }) => {\n  const [gameId, setGameId] = useState(\"\");\n\n  return (\n    <div className=\"joinBox\">\n      <input\n        className=\"gameIdInput\"\n        value={gameId}\n        onChange={(e) => setGameId(e.target.value)}\n      ></input>\n      <Link className=\"actionButton\" to={`/join/${gameId}?pName=${pName}`}>\n        <span>Join</span>\n      </Link>\n    </div>\n  );\n};\n\nexport default JoinBox;\n","import React, { useState } from \"react\";\nimport HostButton from \"./HostButton\";\nimport JoinBox from \"./JoinBox\";\nimport \"./home.css\";\n\nconst Home = () => {\n  const [input, setInput] = useState(\"\");\n  return (\n    <div className=\"centerBox\">\n      <label className=\"nameLabel\">Enter Your Name</label>\n      <input\n        placeholder=\"ex. John Doe\"\n        className=\"nameField\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      ></input>\n      <div className=\"actions\">\n        <HostButton pName={input} />\n        <JoinBox pName={input} />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { useLocation } from \"react-router-dom\";\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport default useQuery;\n","const host = (pName) =>\n  fetch(`/game/host?pName=${pName}`).then((r) => r.json());\n\nconst isGameStarted = () => fetch(`/game/isStarted/`).then((r) => r.json());\n\nconst join = (pName, gameId) =>\n  fetch(`/game/join?gameId=${gameId}&pName=${pName}`).then((r) => r.json());\n\nconst ownInfo = () => fetch(\"/game/playerDetails\").then((r) => r.json());\n\nconst fight = (trait) => fetch(`/game/fight?trait=${trait}`);\n\nexport default { host, isGameStarted, join, ownInfo, fight };\n","import React, { useEffect, useState } from \"react\";\nimport { Prompt, Redirect } from \"react-router-dom\";\nimport useQuery from \"./useQuery\";\nimport GameAPI from \"./GameAPI\";\n\nconst useHostingDetails = () => {\n  const [gameDetails, setGameDetails] = useState(null);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const pName = useQuery().get(\"pName\");\n\n  useEffect(() => {\n    GameAPI.host(pName).then(setGameDetails);\n  }, []);\n\n  useEffect(() => {\n    if (gameDetails !== null) {\n      const intervalId = setInterval(\n        () =>\n          GameAPI.isGameStarted().then(({ isStarted }) =>\n            setIsGameStarted(isStarted)\n          ),\n        1000\n      );\n      return () => clearInterval(intervalId);\n    }\n  }, [gameDetails]);\n\n  return [gameDetails, isGameStarted];\n};\n\nconst HostPage = () => {\n  const [gameDetails, isGameStarted] = useHostingDetails();\n\n  return isGameStarted ? (\n    <Redirect to={`/game`} />\n  ) : (\n    <div className=\"centerBox\">\n      <Prompt message=\"Do you want to leave the game ?\" />\n      <p className=\"message\">\n        {gameDetails ? `Waiting for Opponent..` : `Hosting`}\n      </p>\n      {gameDetails && <p className=\"gameId\">GAME ID: {gameDetails.gameId}</p>}\n    </div>\n  );\n};\n\nexport default HostPage;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, Redirect } from \"react-router-dom\";\nimport GameAPI from \"./GameAPI\";\nimport useQuery from \"./useQuery\";\n\nconst useJoinStatus = () => {\n  const [joinStatus, setJoinStatus] = useState(null);\n  const { gameId } = useParams();\n  const pName = useQuery().get(\"pName\");\n  useEffect(() => {\n    GameAPI.join(pName, gameId).then(setJoinStatus);\n  }, []);\n\n  return joinStatus;\n};\n\nconst JoinPage = () => {\n  const joinStatus = useJoinStatus();\n\n  if (joinStatus === null || joinStatus.error) {\n    const message = joinStatus ? joinStatus.error : \"Joining..\";\n    return (\n      <div className=\"centerBox\">\n        <p className=\"message\">{message}</p>\n      </div>\n    );\n  }\n\n  return <Redirect to={`/game`} />;\n};\n\nexport default JoinPage;\n","import React from \"react\";\nimport \"./lastFight.css\";\n\nconst LastFightDetails = ({\n  trait,\n  winner,\n  winnerCard,\n  looserCard,\n  hasWon,\n}) => {\n  return (\n    <div className=\"lastFight\">\n      <h3>Last Fight</h3>\n      {!trait ? (\n        <p className=\"fightMsg\">No Fights Happened</p>\n      ) : (\n        <React.Fragment>\n          <div className=\"lastFightCards\">\n            <div className=\"miniCard\">\n              <img className=\"miniAvatar\" src={winnerCard.img} />\n              <p>{winnerCard.name}</p>\n            </div>\n            VS\n            <div className=\"miniCard\">\n              <p>{looserCard.name}</p>\n              <img className=\"miniAvatar\" src={looserCard.img} />\n            </div>\n          </div>\n          <p className=\"fightMsg\">Trait: {trait.toUpperCase()}</p>\n          <p className={`fightMsg ${hasWon ? \"winMsg\" : \"loseMsg\"}`}>\n            You {hasWon ? \"won\" : \"lost\"}\n          </p>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default LastFightDetails;\n","import React from \"react\";\nimport LastFightDetails from \"./LastFightDetails\";\n\nconst Status = ({ lastFight, isOwnTurn }) => {\n  return (\n    <div className=\"status\">\n      <LastFightDetails {...lastFight} />\n      <p className=\"turn\">{isOwnTurn ? \"Your\" : \"Opponent's\"} Turn</p>\n    </div>\n  );\n};\n\nexport default Status;\n","import React from \"react\";\nimport \"./card.css\";\n\nconst Card = ({\n  id,\n  name,\n  intelligence,\n  strength,\n  speed,\n  durability,\n  power,\n  combat,\n  height,\n  weight,\n  img,\n  onFight,\n  isPlayable,\n}) => {\n  const handleClick = (trait) => {\n    if (!isPlayable) return;\n    onFight(trait);\n  };\n\n  return (\n    <div className=\"card\" key={id}>\n      <h3 className=\"cardTitle\">{name.toUpperCase()}</h3>\n      <img className=\"avatar\" src={img} alt={`${name} avatar`} />\n      <div className={`traits ${isPlayable ? \"playable\" : \"\"}`}>\n        <p className=\"trait\" onClick={() => handleClick(\"intelligence\")}>\n          Intel: {intelligence}\n        </p>\n        <p className=\"trait\" onClick={() => handleClick(\"strength\")}>\n          Strength: {strength}\n        </p>\n        <p className=\"trait\" onClick={() => handleClick(\"speed\")}>\n          Speed: {speed}\n        </p>\n        <p className=\"trait\" onClick={() => handleClick(\"durability\")}>\n          Durability: {durability}\n        </p>\n        <p className=\"trait\" onClick={() => handleClick(\"power\")}>\n          Power: {power}\n        </p>\n        <p className=\"trait\" onClick={() => handleClick(\"combat\")}>\n          Combat: {combat}\n        </p>\n        <p className=\"trait\" onClick={() => handleClick(\"height\")}>\n          Height: {height}\n        </p>\n        <p className=\"trait\" onClick={() => handleClick(\"weight\")}>\n          Weight: {weight}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nconst NoCard = () => {\n  return (\n    <div className=\"card\">\n      <img\n        className=\"backSide\"\n        src=\"https://cdn.trendhunterstatic.com/phpthumbnails/149/149328/149328_1_600.jpeg\"\n      />\n    </div>\n  );\n};\n\nexport { Card as default, NoCard };\n","import React from \"react\";\nimport Card, { NoCard } from \"./Card\";\n\nconst PlayerDetail = ({\n  topCard,\n  currDeck,\n  comingDeck,\n  name,\n  onFight,\n  isMe,\n  isTurn,\n}) => {\n  return (\n    <div className=\"playerDetails\">\n      <span className=\"cardsCount\">{`Cards: ${currDeck + comingDeck}`}</span>\n      {topCard ? (\n        <Card {...topCard} onFight={onFight} isPlayable={isMe && isTurn} />\n      ) : (\n        <NoCard />\n      )}\n      <span className=\"pName\">{`${isMe ? \"You\" : \"Opponent\"} (${name})`}</span>\n    </div>\n  );\n};\n\nexport default PlayerDetail;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport GameAPI from \"./GameAPI\";\nimport Status from \"./Status\";\nimport PlayerDetail from \"./PlayerDetail\";\nimport \"./game.css\";\n\nconst useGameStatus = () => {\n  const [gameStatus, setGameStatus] = useState(null);\n  const ref = useRef(null);\n\n  useEffect(() => {\n    GameAPI.ownInfo().then(setGameStatus);\n  }, []);\n\n  const fight = (trait) => {\n    GameAPI.fight(trait).then(() => GameAPI.ownInfo().then(setGameStatus));\n  };\n\n  useEffect(() => {\n    if (gameStatus === null || gameStatus.isOwnTurn) {\n      return clearInterval(ref.current);\n    }\n\n    ref.current = setInterval(() => {\n      GameAPI.ownInfo().then(setGameStatus);\n    }, 1000);\n\n    return () => clearInterval(ref.current);\n  }, [gameStatus && gameStatus.isOwnTurn]);\n\n  return [gameStatus, fight];\n};\n\nconst Game = () => {\n  const [gameStatus, fight] = useGameStatus();\n\n  if (gameStatus === null || gameStatus.state === \"over\") {\n    const message = gameStatus\n      ? `${gameStatus.isWinner ? \"You\" : \"Opponent\"} won`\n      : \"Loading..\";\n    return (\n      <div className=\"centerBox\">\n        <p className={`message ${gameStatus ? \"result\" : \"\"}`}>{message}</p>\n      </div>\n    );\n  }\n\n  const { myself, opponent, isOwnTurn, lastFight } = gameStatus;\n\n  return (\n    <div className=\"gameContainer\">\n      <Prompt message=\"Do you want to leave the game ?\" />\n      <Status lastFight={lastFight} isOwnTurn={isOwnTurn} />\n      <div>\n        <PlayerDetail\n          {...opponent}\n          isMe={false}\n          onFight={fight}\n          isTurn={isOwnTurn}\n        />\n        <PlayerDetail\n          {...myself}\n          isMe={true}\n          onFight={fight}\n          isTurn={isOwnTurn}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Icon = () => {\n  return (\n    <Link to=\"/\" className=\"iconBox\">\n      <img\n        className=\"iconImg\"\n        alt=\"Icon\"\n        src=\"https://cdn0.iconfinder.com/data/icons/sports-and-games-3/512/102-512.png\"\n      />\n      <span className=\"gameName\">Super Cards</span>\n    </Link>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Home from \"./Home\";\nimport HostPage from \"./HostPage\";\nimport JoinPage from \"./JoinPage\";\nimport Game from \"./Game\";\nimport Icon from \"./Icon\";\nimport \"./app.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Icon />\n      <Switch>\n        <Route path=\"/index\">\n          <Redirect from=\"/index\" to=\"/\" exact />\n        </Route>\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n        <Route path=\"/host\" exact>\n          <HostPage />\n        </Route>\n        <Route path=\"/join/:gameId\" exact>\n          <JoinPage />\n        </Route>\n        <Route path=\"/game\" exact>\n          <Game />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}